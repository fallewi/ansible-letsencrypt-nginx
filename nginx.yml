- hosts: web
  become: yes
  vars_files: vars.yml
  vars:
    ssl_crt:     "{{ domain }}-fullchain.crt"
    ssl_chain:   "{{ domain }}-intermediate.crt"
    ssl_key:     "{{ domain }}.pem"
    ssl_dhparam: "{{ domain }}-dhparam.pem"

  tasks:
  - name: "apt-get update"
    apt:
      update_cache: yes
      cache_valid_time: 3600

  - name: "install nginx"
    apt:
      name: ['nginx', 'ssl-cert']
      state: latest

  - name: "create www directory"
    file:
      path: /var/www/{{ domain }}
      state: directory
      mode: '0775'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"

  - name: delete default nginx site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: restart nginx

  - name: copy dhparam certificate
    copy: 
      src: "{{ certs_path }}/{{ ssl_dhparam }}"
      dest: "/etc/ssl/certs/{{ ssl_dhparam }}"
      mode: "0644"
    notify: restart nginx

  - name: copy ssl certificate
    copy: 
      src: "{{ certs_path }}/{{ ssl_crt }}"
      dest: "/etc/ssl/certs/{{ ssl_crt }}"
      mode: "0644"
    notify: restart nginx

  - name: copy ssl chain
    copy: 
      src: "{{ certs_path }}/{{ ssl_chain }}"
      dest: "/etc/ssl/certs/{{ ssl_chain }}"
      mode: "0644"
    notify: restart nginx

  - name: copy ssl private key
    copy: 
      src: "{{ certs_path }}/{{ ssl_key }}"
      dest: "/etc/ssl/private/{{ ssl_key }}"
      mode: "0640"
      group: ssl-cert
    notify: restart nginx

  - name: copy nginx.conf
    copy:
      src: nginx.conf
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: '0644'
    notify: restart nginx

  - name: copy nginx site.conf
    template:
      src: site.conf.j2
      dest: /etc/nginx/sites-enabled/{{ domain }}
      owner: root
      group: root
      mode: '0644'
    notify: restart nginx

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
